option(USE_QOS_CUBES, "Use obsolete static QoS cubes, specified by configuration file" OFF)
if (USE_QOS_CUBES)
    add_definitions(-D RL_USE_QOS_CUBES)
endif()

file(GLOB UIPCP_GPB_PROTOFILES "uipcp-gpb/*.proto")

# Protocol buffer processing
protobuf_generate_cpp(UIPCP_GPB_SRC UIPCP_GPB_HDR ${UIPCP_GPB_PROTOFILES})

# Libraries generated by the project
add_library(uipcp-normal STATIC uipcp-normal.cpp uipcp-normal.hpp uipcp-normal-enroll.cpp uipcp-normal-flow-alloc.cpp uipcp-normal-appl-reg.cpp uipcp-normal-lower-flows.cpp uipcp-normal-lfdb.hpp uipcp-normal-lfdb.cpp uipcp-normal-addr-alloc.cpp uipcp-normal-ceft.hpp uipcp-normal-ceft.cpp uipcp-normal-qos.cpp ${UIPCP_GPB_SRC} ${UIPCP_GPB_HDR})
target_link_libraries(uipcp-normal ${CMAKE_THREAD_LIBS_INIT} cdap rlite-raft)

message(STATUS "Adding include dir ${CMAKE_CURRENT_BINARY_DIR} to uipcp-normal target")
target_include_directories(uipcp-normal PUBLIC ${CMAKE_CURRENT_BINARY_DIR})

# Executables generated by the project
add_executable(rlite-uipcps uipcp-container.c uipcp-unix.c uipcp-shim-tcp4.c uipcp-shim-udp4.c uipcp-shim-wifi.c)
target_link_libraries(rlite-uipcps rina-api rlite-conf uipcp-normal rlite-wifi)

# Installation directives
install(TARGETS rlite-uipcps DESTINATION usr/bin)
install(FILES shim-tcp4-dir DESTINATION etc/rina)

# Tests
add_executable(lfdb-test lfdb-test.cpp)
target_link_libraries(lfdb-test uipcp-normal)
add_test(NAME lfdb COMMAND lfdb-test)
add_executable(policy-deps-test policy-deps-test.cpp uipcp-container.c uipcp-unix.c uipcp-shim-tcp4.c uipcp-shim-udp4.c uipcp-shim-wifi.c)
target_link_libraries(policy-deps-test uipcp-normal rlite-conf rlite-wifi)
add_test(NAME policy-deps COMMAND policy-deps-test)
add_executable(lfdb-bw-test lfdb-bw-test.cpp)
target_link_libraries(lfdb-bw-test uipcp-normal)
add_test(NAME lfdb-bw COMMAND lfdb-bw-test)

if (USE_QOS_CUBES)
    install(FILES uipcp-qoscubes.qos DESTINATION etc/rina)
endif()
